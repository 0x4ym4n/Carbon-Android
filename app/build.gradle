buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'

        classpath 'io.fabric.tools:gradle:1.24.0'

        classpath 'com.squareup.spoon:spoon-runner:1.7.1'
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    }
}

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' } // Robolectric
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'

apply plugin: 'com.jakewharton.hugo'
apply plugin: 'io.fabric'

apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'spoon'

apply plugin: 'com.github.ben-manes.versions'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/maven/com.squareup.okhttp/okhttp/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    defaultConfig {
        applicationId 'com.mycompany.myapp'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField "String", "VERSION_FINGERPRINT", rootProject.ext.versionFingerprint

        proguardFile getDefaultProguardFile('proguard-android.txt')
        proguardFile 'proguard-rules.pro'
        proguardFile '../config/proguard/android-support-v4.pro'
        proguardFile '../config/proguard/android-support-v7.pro'
        proguardFile '../config/proguard/butterknife.pro'
        proguardFile '../config/proguard/crashlytics.pro'
        proguardFile '../config/proguard/google-play-services.pro'
        proguardFile '../config/proguard/gson.pro'
        proguardFile '../config/proguard/okhttp3.pro'
        proguardFile '../config/proguard/okio.pro'
        proguardFile '../config/proguard/parceler.pro'
        proguardFile '../config/proguard/retrofit2.pro'
        proguardFile '../config/proguard/retrolambda.pro'
        proguardFile '../config/proguard/rxjava.pro'

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            apply from: rootProject.file('distribution/keys/sample.gradle')

            storeFile rootProject.file(sampleKeystore)
            storePassword sampleKeystorePassword
            keyAlias sampleKeyAlias
            keyPassword sampleKeyPassword
        }
    }

    flavorDimensions "app"
    productFlavors {
        dev {
            dimension "app"
            applicationId 'com.mycompany.myapp.dev'
        }
        prod {
            dimension "app"
            applicationId 'com.mycompany.myapp'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError true
        lintConfig file('lint.xml')
        htmlReport true
    }
}

ext {
    // App dependency versions
    daggerVersion = '2.11'
    retrofitVersion = '2.3.0'
    okHttpVersion = '3.8.1'
    parcelerVersion = '1.1.6'
    leakcanaryVersion = '1.5.1'

    // Test dependency versions
    mockitoVersion = '2.8.47'
    robolectricVersion = '3.4'
    androidTestSupportVersion = '0.5'
    espressoVersion = '2.2.2'
}

dependencies {
    // Android/Google libraries
    implementation rootProject.ext.libraryAndroidSupport
    implementation rootProject.ext.libraryAndroidAppCompat
    implementation rootProject.ext.libraryAndroidRecyclerView
    implementation rootProject.ext.libraryAndroidCardView
    implementation rootProject.ext.libraryAndroidAppCompat
    implementation rootProject.ext.libraryGooglePlayServices
    implementation rootProject.ext.libraryAndroidSupportAnnotations
    implementation rootProject.ext.libraryAndroidDesignSupport

    // App architecture - Dagger 2
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // App architecture - RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // JSON
    implementation 'com.google.code.gson:gson:2.8.1'

    // Networking - HTTP
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"

    // Networking - REST
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Code generators - Butterknife
    implementation 'com.jakewharton:butterknife:8.7.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'

    // Code generators - Parceler
    implementation "org.parceler:parceler-api:$parcelerVersion"
    annotationProcessor ("org.parceler:parceler:$parcelerVersion") {
        exclude module: 'commons-logging'
    }

    // Monitoring - Timber (logging)
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Monitoring - Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    devImplementation 'com.jakewharton:process-phoenix:1.1.0'

    // Monitoring - Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"

    // Unit test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    // FIXME - This should be 3.4 when it is released...also look at android.enableAapt2 in gradle.properties
    // FIXME - Also, remove the snapshot repository
    testImplementation 'org.robolectric:shadows-support-v4:3.4-SNAPSHOT'

    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // TODO - See comment on Spoon config below
    androidTestImplementation "com.android.support.test:runner:$androidTestSupportVersion"
    androidTestImplementation "com.android.support.test:rules:$androidTestSupportVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"

    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"

    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.7.0'

    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'
}

configurations {
    all {
        resolutionStrategy {
            force 'com.google.code.findbugs:jsr305:3.0.2'
            force "$rootProject.ext.libraryAndroidSupportAnnotations"
        }
    }
}

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    excludeFilter file("${project.rootDir}/config/findbugs/exclude.xml")
    classes = fileTree('build/intermediates/classes/dev/debug/')
    source = fileTree('src/main/java/')
    classpath = files()
    effort = 'max'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task pmd(type: Pmd, dependsOn: "assembleDebug") {
    ruleSetFiles = files("${project.rootDir}/config/pmd/pmd-ruleset.xml")
    ruleSets = [] // See http://sourceforge.net/p/pmd/discussion/188193/thread/6e9c6017/ for why this is needed...
    source = fileTree('src/main/java/')
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task checkstyle(type: Checkstyle, dependsOn: "assembleDebug") {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**', '**/test/**', '**/androidTest/**'
    reports {
        xml.enabled false
        html.enabled true
    }
    classpath = files(file("${project.rootDir}/app/build/intermediates/classes"))
    configProperties = [
            'checkstyle.cache.file': rootProject.file('build/checkstyle.cache'),
    ]
}

spoon {
    // TODO - Might not be needed with v1.0 of the test support libs
    grantAllPermissions = true
}

apply from: 'generator.gradle'